<?php

namespace Proxies\__CG__;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Cad_embarcacao extends \Cad_embarcacao implements \Doctrine\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setNome($nome)
    {
        $this->__load();
        return parent::setNome($nome);
    }

    public function setAutoPesca($auto_pesca)
    {
        $this->__load();
        return parent::setAutoPesca($auto_pesca);
    }

    public function setRegMarinha($reg_marinha)
    {
        $this->__load();
        return parent::setRegMarinha($reg_marinha);
    }

    public function setRegMpa($reg_mpa)
    {
        $this->__load();
        return parent::setRegMpa($reg_mpa);
    }

    public function setComprimento($comprimento)
    {
        $this->__load();
        return parent::setComprimento($comprimento);
    }

    public function setArqBruta($arq_bruta)
    {
        $this->__load();
        return parent::setArqBruta($arq_bruta);
    }

    public function setAnoFab($ano_fab)
    {
        $this->__load();
        return parent::setAnoFab($ano_fab);
    }

    public function setMatCasco($mat_casco)
    {
        $this->__load();
        return parent::setMatCasco($mat_casco);
    }

    public function setPropulsao($propulsao)
    {
        $this->__load();
        return parent::setPropulsao($propulsao);
    }

    public function setPotMotor($pot_motor)
    {
        $this->__load();
        return parent::setPotMotor($pot_motor);
    }

    public function setTripulacao($tripulacao)
    {
        $this->__load();
        return parent::setTripulacao($tripulacao);
    }

    public function setMunicipio($municipio)
    {
        $this->__load();
        return parent::setMunicipio($municipio);
    }

    public function setUf($uf)
    {
        $this->__load();
        return parent::setUf($uf);
    }

    public function getEmbarcacaoId()
    {
        $this->__load();
        return parent::getEmbarcacaoId();
    }

    public function getEmbarcacaoNome()
    {
        $this->__load();
        return parent::getEmbarcacaoNome();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id_embarcacao', 'nome', 'auto_pesca', 'reg_marinha', 'reg_mpa', 'comprimento', 'arq_bruta', 'ano_fab', 'mat_casco', 'propulsao', 'pot_motor', 'tripulacao', 'municipio', 'uf');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}